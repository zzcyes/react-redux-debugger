{"version":3,"file":"redux.js","sources":["../src/utils/formatProdErrorMessage.ts","../src/utils/symbol-observable.ts","../src/utils/actionTypes.ts","../src/utils/isPlainObject.ts","../src/utils/kindOf.ts","../src/createStore.ts","../src/utils/warning.ts","../src/combineReducers.ts","../src/bindActionCreators.ts","../src/compose.ts","../src/applyMiddleware.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\r\n *\r\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\r\n * during build.\r\n * @param {number} code\r\n */\r\nfunction formatProdErrorMessage(code: number) {\r\n  return (\r\n    `Minified Redux error #${code}; visit https://redux.js.org/Errors?code=${code} for the full message or ` +\r\n    'use the non-minified dev environment for full errors. '\r\n  )\r\n}\r\n\r\nexport default formatProdErrorMessage\r\n","declare global {\r\n  interface SymbolConstructor {\r\n    readonly observable: symbol\r\n  }\r\n}\r\n\r\nconst $$observable = /* #__PURE__ */ (() =>\r\n  (typeof Symbol === 'function' && Symbol.observable) || '@@observable')()\r\n\r\nexport default $$observable\r\n","/**\r\n * These are private action types reserved by Redux.\r\n * For any unknown actions, you must return the current state.\r\n * If the current state is undefined, you must return the initial state.\r\n * Do not reference these action types directly in your code.\r\n */\r\n\r\nconst randomString = () =>\r\n  Math.random().toString(36).substring(7).split('').join('.')\r\n\r\nconst ActionTypes = {\r\n  INIT: `@@redux/INIT${/* #__PURE__ */ randomString()}`,\r\n  REPLACE: `@@redux/REPLACE${/* #__PURE__ */ randomString()}`,\r\n  PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${randomString()}`\r\n}\r\n\r\nexport default ActionTypes\r\n","/**\r\n * @param obj The object to inspect.\r\n * @returns True if the argument appears to be a plain object.\r\n */\r\nexport default function isPlainObject(obj: any): boolean {\r\n  if (typeof obj !== 'object' || obj === null) return false\r\n\r\n  let proto = obj\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(obj) === proto\r\n}\r\n","// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\r\nexport function miniKindOf(val: any): string {\r\n  if (val === void 0) return 'undefined'\r\n  if (val === null) return 'null'\r\n\r\n  const type = typeof val\r\n  switch (type) {\r\n    case 'boolean':\r\n    case 'string':\r\n    case 'number':\r\n    case 'symbol':\r\n    case 'function': {\r\n      return type\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(val)) return 'array'\r\n  if (isDate(val)) return 'date'\r\n  if (isError(val)) return 'error'\r\n\r\n  const constructorName = ctorName(val)\r\n  switch (constructorName) {\r\n    case 'Symbol':\r\n    case 'Promise':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n    case 'Map':\r\n    case 'Set':\r\n      return constructorName\r\n  }\r\n\r\n  // other\r\n  return Object.prototype.toString\r\n    .call(val)\r\n    .slice(8, -1)\r\n    .toLowerCase()\r\n    .replace(/\\s/g, '')\r\n}\r\n\r\nfunction ctorName(val: any): string | null {\r\n  return typeof val.constructor === 'function' ? val.constructor.name : null\r\n}\r\n\r\nfunction isError(val: any) {\r\n  return (\r\n    val instanceof Error ||\r\n    (typeof val.message === 'string' &&\r\n      val.constructor &&\r\n      typeof val.constructor.stackTraceLimit === 'number')\r\n  )\r\n}\r\n\r\nfunction isDate(val: any) {\r\n  if (val instanceof Date) return true\r\n  return (\r\n    typeof val.toDateString === 'function' &&\r\n    typeof val.getDate === 'function' &&\r\n    typeof val.setDate === 'function'\r\n  )\r\n}\r\n\r\nexport function kindOf(val: any) {\r\n  let typeOfVal: string = typeof val\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    typeOfVal = miniKindOf(val)\r\n  }\r\n\r\n  return typeOfVal\r\n}\r\n","import $$observable from './utils/symbol-observable'\r\n\r\nimport {\r\n  Store,\r\n  PreloadedState,\r\n  StoreEnhancer,\r\n  Dispatch,\r\n  Observer,\r\n  ExtendState\r\n} from './types/store'\r\nimport { Action } from './types/actions'\r\nimport { Reducer } from './types/reducers'\r\nimport ActionTypes from './utils/actionTypes'\r\nimport isPlainObject from './utils/isPlainObject'\r\nimport { kindOf } from './utils/kindOf'\r\n\r\n/**\r\n * Creates a Redux store that holds the state tree.\r\n * The only way to change the data in the store is to call `dispatch()` on it.\r\n *\r\n * There should only be a single store in your app. To specify how different\r\n * parts of the state tree respond to actions, you may combine several reducers\r\n * into a single reducer function by using `combineReducers`.\r\n *\r\n * @param reducer A function that returns the next state tree, given\r\n * the current state tree and the action to handle.\r\n *\r\n * @param preloadedState The initial state. You may optionally specify it\r\n * to hydrate the state from the server in universal apps, or to restore a\r\n * previously serialized user session.\r\n * If you use `combineReducers` to produce the root reducer function, this must be\r\n * an object with the same shape as `combineReducers` keys.\r\n *\r\n * @param enhancer The store enhancer. You may optionally specify it\r\n * to enhance the store with third-party capabilities such as middleware,\r\n * time travel, persistence, etc. The only store enhancer that ships with Redux\r\n * is `applyMiddleware()`.\r\n *\r\n * @returns A Redux store that lets you read the state, dispatch actions\r\n * and subscribe to changes.\r\n */\r\nexport default function createStore<\r\n  S,\r\n  A extends Action,\r\n  Ext = {},\r\n  StateExt = never\r\n>(\r\n  reducer: Reducer<S, A>,\r\n  enhancer?: StoreEnhancer<Ext, StateExt>\r\n): Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext\r\nexport default function createStore<\r\n  S,\r\n  A extends Action,\r\n  Ext = {},\r\n  StateExt = never\r\n>(\r\n  reducer: Reducer<S, A>,\r\n  preloadedState?: PreloadedState<S>,\r\n  enhancer?: StoreEnhancer<Ext, StateExt>\r\n): Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext\r\nexport default function createStore<\r\n  S,\r\n  A extends Action,\r\n  Ext = {},\r\n  StateExt = never\r\n>(\r\n  reducer: Reducer<S, A>,\r\n  preloadedState?: PreloadedState<S> | StoreEnhancer<Ext, StateExt>,\r\n  enhancer?: StoreEnhancer<Ext, StateExt>\r\n): Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext {\r\n  if (\r\n    (typeof preloadedState === 'function' && typeof enhancer === 'function') ||\r\n    (typeof enhancer === 'function' && typeof arguments[3] === 'function')\r\n  ) {\r\n    throw new Error(\r\n      'It looks like you are passing several store enhancers to ' +\r\n        'createStore(). This is not supported. Instead, compose them ' +\r\n        'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.'\r\n    )\r\n  }\r\n\r\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\r\n    enhancer = preloadedState as StoreEnhancer<Ext, StateExt>\r\n    preloadedState = undefined\r\n  }\r\n\r\n  if (typeof enhancer !== 'undefined') {\r\n    if (typeof enhancer !== 'function') {\r\n      throw new Error(\r\n        `Expected the enhancer to be a function. Instead, received: '${kindOf(\r\n          enhancer\r\n        )}'`\r\n      )\r\n    }\r\n\r\n    return enhancer(createStore)(\r\n      reducer,\r\n      preloadedState as PreloadedState<S>\r\n    ) as Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext\r\n  }\r\n\r\n  if (typeof reducer !== 'function') {\r\n    throw new Error(\r\n      `Expected the root reducer to be a function. Instead, received: '${kindOf(\r\n        reducer\r\n      )}'`\r\n    )\r\n  }\r\n\r\n  let currentReducer = reducer\r\n  let currentState = preloadedState as S\r\n  let currentListeners: (() => void)[] | null = []\r\n  let nextListeners = currentListeners\r\n  let isDispatching = false\r\n\r\n  /**\r\n   * This makes a shallow copy of currentListeners so we can use\r\n   * nextListeners as a temporary list while dispatching.\r\n   *\r\n   * This prevents any bugs around consumers calling\r\n   * subscribe/unsubscribe in the middle of a dispatch.\r\n   */\r\n  function ensureCanMutateNextListeners() {\r\n    if (nextListeners === currentListeners) {\r\n      nextListeners = currentListeners.slice()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reads the state tree managed by the store.\r\n   *\r\n   * @returns The current state tree of your application.\r\n   */\r\n  function getState(): S {\r\n    if (isDispatching) {\r\n      throw new Error(\r\n        'You may not call store.getState() while the reducer is executing. ' +\r\n          'The reducer has already received the state as an argument. ' +\r\n          'Pass it down from the top reducer instead of reading it from the store.'\r\n      )\r\n    }\r\n\r\n    return currentState as S\r\n  }\r\n\r\n  /**\r\n   * Adds a change listener. It will be called any time an action is dispatched,\r\n   * and some part of the state tree may potentially have changed. You may then\r\n   * call `getState()` to read the current state tree inside the callback.\r\n   *\r\n   * You may call `dispatch()` from a change listener, with the following\r\n   * caveats:\r\n   *\r\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\r\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\r\n   * will not have any effect on the `dispatch()` that is currently in progress.\r\n   * However, the next `dispatch()` call, whether nested or not, will use a more\r\n   * recent snapshot of the subscription list.\r\n   *\r\n   * 2. The listener should not expect to see all state changes, as the state\r\n   * might have been updated multiple times during a nested `dispatch()` before\r\n   * the listener is called. It is, however, guaranteed that all subscribers\r\n   * registered before the `dispatch()` started will be called with the latest\r\n   * state by the time it exits.\r\n   *\r\n   * @param listener A callback to be invoked on every dispatch.\r\n   * @returns A function to remove this change listener.\r\n   */\r\n  function subscribe(listener: () => void) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error(\r\n        `Expected the listener to be a function. Instead, received: '${kindOf(\r\n          listener\r\n        )}'`\r\n      )\r\n    }\r\n\r\n    if (isDispatching) {\r\n      throw new Error(\r\n        'You may not call store.subscribe() while the reducer is executing. ' +\r\n          'If you would like to be notified after the store has been updated, subscribe from a ' +\r\n          'component and invoke store.getState() in the callback to access the latest state. ' +\r\n          'See https://redux.js.org/api/store#subscribelistener for more details.'\r\n      )\r\n    }\r\n\r\n    let isSubscribed = true\r\n\r\n    ensureCanMutateNextListeners()\r\n    nextListeners.push(listener)\r\n\r\n    return function unsubscribe() {\r\n      if (!isSubscribed) {\r\n        return\r\n      }\r\n\r\n      if (isDispatching) {\r\n        throw new Error(\r\n          'You may not unsubscribe from a store listener while the reducer is executing. ' +\r\n            'See https://redux.js.org/api/store#subscribelistener for more details.'\r\n        )\r\n      }\r\n\r\n      isSubscribed = false\r\n\r\n      ensureCanMutateNextListeners()\r\n      const index = nextListeners.indexOf(listener)\r\n      nextListeners.splice(index, 1)\r\n      currentListeners = null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatches an action. It is the only way to trigger a state change.\r\n   *\r\n   * The `reducer` function, used to create the store, will be called with the\r\n   * current state tree and the given `action`. Its return value will\r\n   * be considered the **next** state of the tree, and the change listeners\r\n   * will be notified.\r\n   *\r\n   * The base implementation only supports plain object actions. If you want to\r\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\r\n   * wrap your store creating function into the corresponding middleware. For\r\n   * example, see the documentation for the `redux-thunk` package. Even the\r\n   * middleware will eventually dispatch plain object actions using this method.\r\n   *\r\n   * @param action A plain object representing “what changed”. It is\r\n   * a good idea to keep actions serializable so you can record and replay user\r\n   * sessions, or use the time travelling `redux-devtools`. An action must have\r\n   * a `type` property which may not be `undefined`. It is a good idea to use\r\n   * string constants for action types.\r\n   *\r\n   * @returns For convenience, the same action object you dispatched.\r\n   *\r\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\r\n   * return something else (for example, a Promise you can await).\r\n   */\r\n  function dispatch(action: A) {\r\n    if (!isPlainObject(action)) {\r\n      throw new Error(\r\n        `Actions must be plain objects. Instead, the actual type was: '${kindOf(\r\n          action\r\n        )}'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.`\r\n      )\r\n    }\r\n\r\n    if (typeof action.type === 'undefined') {\r\n      throw new Error(\r\n        'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.'\r\n      )\r\n    }\r\n\r\n    if (isDispatching) {\r\n      throw new Error('Reducers may not dispatch actions.')\r\n    }\r\n\r\n    try {\r\n      isDispatching = true\r\n      currentState = currentReducer(currentState, action)\r\n    } finally {\r\n      isDispatching = false\r\n    }\r\n\r\n    const listeners = (currentListeners = nextListeners)\r\n    for (let i = 0; i < listeners.length; i++) {\r\n      const listener = listeners[i]\r\n      listener()\r\n    }\r\n\r\n    return action\r\n  }\r\n\r\n  /**\r\n   * Replaces the reducer currently used by the store to calculate the state.\r\n   *\r\n   * You might need this if your app implements code splitting and you want to\r\n   * load some of the reducers dynamically. You might also need this if you\r\n   * implement a hot reloading mechanism for Redux.\r\n   *\r\n   * @param nextReducer The reducer for the store to use instead.\r\n   * @returns The same store instance with a new reducer in place.\r\n   */\r\n  function replaceReducer<NewState, NewActions extends A>(\r\n    nextReducer: Reducer<NewState, NewActions>\r\n  ): Store<ExtendState<NewState, StateExt>, NewActions, StateExt, Ext> & Ext {\r\n    if (typeof nextReducer !== 'function') {\r\n      throw new Error(\r\n        `Expected the nextReducer to be a function. Instead, received: '${kindOf(\r\n          nextReducer\r\n        )}`\r\n      )\r\n    }\r\n\r\n    // TODO: do this more elegantly\r\n    ;(currentReducer as unknown as Reducer<NewState, NewActions>) = nextReducer\r\n\r\n    // This action has a similar effect to ActionTypes.INIT.\r\n    // Any reducers that existed in both the new and old rootReducer\r\n    // will receive the previous state. This effectively populates\r\n    // the new state tree with any relevant data from the old one.\r\n    dispatch({ type: ActionTypes.REPLACE } as A)\r\n    // change the type of the store by casting it to the new store\r\n    return store as unknown as Store<\r\n      ExtendState<NewState, StateExt>,\r\n      NewActions,\r\n      StateExt,\r\n      Ext\r\n    > &\r\n      Ext\r\n  }\r\n\r\n  /**\r\n   * Interoperability point for observable/reactive libraries.\r\n   * @returns A minimal observable of state changes.\r\n   * For more information, see the observable proposal:\r\n   * https://github.com/tc39/proposal-observable\r\n   */\r\n  function observable() {\r\n    const outerSubscribe = subscribe\r\n    return {\r\n      /**\r\n       * The minimal observable subscription method.\r\n       * @param observer Any object that can be used as an observer.\r\n       * The observer object should have a `next` method.\r\n       * @returns An object with an `unsubscribe` method that can\r\n       * be used to unsubscribe the observable from the store, and prevent further\r\n       * emission of values from the observable.\r\n       */\r\n      subscribe(observer: unknown) {\r\n        if (typeof observer !== 'object' || observer === null) {\r\n          throw new TypeError(\r\n            `Expected the observer to be an object. Instead, received: '${kindOf(\r\n              observer\r\n            )}'`\r\n          )\r\n        }\r\n\r\n        function observeState() {\r\n          const observerAsObserver = observer as Observer<S>\r\n          if (observerAsObserver.next) {\r\n            observerAsObserver.next(getState())\r\n          }\r\n        }\r\n\r\n        observeState()\r\n        const unsubscribe = outerSubscribe(observeState)\r\n        return { unsubscribe }\r\n      },\r\n\r\n      [$$observable]() {\r\n        return this\r\n      }\r\n    }\r\n  }\r\n\r\n  // When a store is created, an \"INIT\" action is dispatched so that every\r\n  // reducer returns their initial state. This effectively populates\r\n  // the initial state tree.\r\n  dispatch({ type: ActionTypes.INIT } as A)\r\n\r\n  const store = {\r\n    dispatch: dispatch as Dispatch<A>,\r\n    subscribe,\r\n    getState,\r\n    replaceReducer,\r\n    [$$observable]: observable\r\n  } as unknown as Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext\r\n  return store\r\n}\r\n","/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param message The warning message.\r\n */\r\nexport default function warning(message: string): void {\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\r\n    console.error(message)\r\n  }\r\n  /* eslint-enable no-console */\r\n  try {\r\n    // This error was thrown as a convenience so that if you enable\r\n    // \"break on all exceptions\" in your console,\r\n    // it would pause the execution at this line.\r\n    throw new Error(message)\r\n  } catch (e) {} // eslint-disable-line no-empty\r\n}\r\n","import { AnyAction, Action } from './types/actions'\r\nimport {\r\n  ActionFromReducersMapObject,\r\n  Reducer,\r\n  ReducersMapObject,\r\n  StateFromReducersMapObject\r\n} from './types/reducers'\r\nimport { CombinedState } from './types/store'\r\n\r\nimport ActionTypes from './utils/actionTypes'\r\nimport isPlainObject from './utils/isPlainObject'\r\nimport warning from './utils/warning'\r\nimport { kindOf } from './utils/kindOf'\r\n\r\nfunction getUnexpectedStateShapeWarningMessage(\r\n  inputState: object,\r\n  reducers: ReducersMapObject,\r\n  action: Action,\r\n  unexpectedKeyCache: { [key: string]: true }\r\n) {\r\n  const reducerKeys = Object.keys(reducers)\r\n  const argumentName =\r\n    action && action.type === ActionTypes.INIT\r\n      ? 'preloadedState argument passed to createStore'\r\n      : 'previous state received by the reducer'\r\n\r\n  if (reducerKeys.length === 0) {\r\n    return (\r\n      'Store does not have a valid reducer. Make sure the argument passed ' +\r\n      'to combineReducers is an object whose values are reducers.'\r\n    )\r\n  }\r\n\r\n  if (!isPlainObject(inputState)) {\r\n    return (\r\n      `The ${argumentName} has unexpected type of \"${kindOf(\r\n        inputState\r\n      )}\". Expected argument to be an object with the following ` +\r\n      `keys: \"${reducerKeys.join('\", \"')}\"`\r\n    )\r\n  }\r\n\r\n  const unexpectedKeys = Object.keys(inputState).filter(\r\n    key => !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key]\r\n  )\r\n\r\n  unexpectedKeys.forEach(key => {\r\n    unexpectedKeyCache[key] = true\r\n  })\r\n\r\n  if (action && action.type === ActionTypes.REPLACE) return\r\n\r\n  if (unexpectedKeys.length > 0) {\r\n    return (\r\n      `Unexpected ${unexpectedKeys.length > 1 ? 'keys' : 'key'} ` +\r\n      `\"${unexpectedKeys.join('\", \"')}\" found in ${argumentName}. ` +\r\n      `Expected to find one of the known reducer keys instead: ` +\r\n      `\"${reducerKeys.join('\", \"')}\". Unexpected keys will be ignored.`\r\n    )\r\n  }\r\n}\r\n\r\nfunction assertReducerShape(reducers: ReducersMapObject) {\r\n  Object.keys(reducers).forEach(key => {\r\n    const reducer = reducers[key]\r\n    const initialState = reducer(undefined, { type: ActionTypes.INIT })\r\n\r\n    if (typeof initialState === 'undefined') {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined during initialization. ` +\r\n          `If the state passed to the reducer is undefined, you must ` +\r\n          `explicitly return the initial state. The initial state may ` +\r\n          `not be undefined. If you don't want to set a value for this reducer, ` +\r\n          `you can use null instead of undefined.`\r\n      )\r\n    }\r\n\r\n    if (\r\n      typeof reducer(undefined, {\r\n        type: ActionTypes.PROBE_UNKNOWN_ACTION()\r\n      }) === 'undefined'\r\n    ) {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` +\r\n          `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` +\r\n          `namespace. They are considered private. Instead, you must return the ` +\r\n          `current state for any unknown actions, unless it is undefined, ` +\r\n          `in which case you must return the initial state, regardless of the ` +\r\n          `action type. The initial state may not be undefined, but can be null.`\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Turns an object whose values are different reducer functions, into a single\r\n * reducer function. It will call every child reducer, and gather their results\r\n * into a single state object, whose keys correspond to the keys of the passed\r\n * reducer functions.\r\n *\r\n * @template S Combined state object type.\r\n *\r\n * @param reducers An object whose values correspond to different reducer\r\n *   functions that need to be combined into one. One handy way to obtain it\r\n *   is to use ES6 `import * as reducers` syntax. The reducers may never\r\n *   return undefined for any action. Instead, they should return their\r\n *   initial state if the state passed to them was undefined, and the current\r\n *   state for any unrecognized action.\r\n *\r\n * @returns A reducer function that invokes every reducer inside the passed\r\n *   object, and builds a state object with the same shape.\r\n */\r\nexport default function combineReducers<S>(\r\n  reducers: ReducersMapObject<S, any>\r\n): Reducer<CombinedState<S>>\r\nexport default function combineReducers<S, A extends Action = AnyAction>(\r\n  reducers: ReducersMapObject<S, A>\r\n): Reducer<CombinedState<S>, A>\r\nexport default function combineReducers<M extends ReducersMapObject>(\r\n  reducers: M\r\n): Reducer<\r\n  CombinedState<StateFromReducersMapObject<M>>,\r\n  ActionFromReducersMapObject<M>\r\n>\r\nexport default function combineReducers(reducers: ReducersMapObject) {\r\n  const reducerKeys = Object.keys(reducers)\r\n  const finalReducers: ReducersMapObject = {}\r\n  for (let i = 0; i < reducerKeys.length; i++) {\r\n    const key = reducerKeys[i]\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof reducers[key] === 'undefined') {\r\n        warning(`No reducer provided for key \"${key}\"`)\r\n      }\r\n    }\r\n\r\n    if (typeof reducers[key] === 'function') {\r\n      finalReducers[key] = reducers[key]\r\n    }\r\n  }\r\n  const finalReducerKeys = Object.keys(finalReducers)\r\n\r\n  // This is used to make sure we don't warn about the same\r\n  // keys multiple times.\r\n  let unexpectedKeyCache: { [key: string]: true }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    unexpectedKeyCache = {}\r\n  }\r\n\r\n  let shapeAssertionError: unknown\r\n  try {\r\n    assertReducerShape(finalReducers)\r\n  } catch (e) {\r\n    shapeAssertionError = e\r\n  }\r\n\r\n  return function combination(\r\n    state: StateFromReducersMapObject<typeof reducers> = {},\r\n    action: AnyAction\r\n  ) {\r\n    if (shapeAssertionError) {\r\n      throw shapeAssertionError\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const warningMessage = getUnexpectedStateShapeWarningMessage(\r\n        state,\r\n        finalReducers,\r\n        action,\r\n        unexpectedKeyCache\r\n      )\r\n      if (warningMessage) {\r\n        warning(warningMessage)\r\n      }\r\n    }\r\n\r\n    let hasChanged = false\r\n    const nextState: StateFromReducersMapObject<typeof reducers> = {}\r\n    for (let i = 0; i < finalReducerKeys.length; i++) {\r\n      const key = finalReducerKeys[i]\r\n      const reducer = finalReducers[key]\r\n      const previousStateForKey = state[key]\r\n      const nextStateForKey = reducer(previousStateForKey, action)\r\n      if (typeof nextStateForKey === 'undefined') {\r\n        const actionType = action && action.type\r\n        throw new Error(\r\n          `When called with an action of type ${\r\n            actionType ? `\"${String(actionType)}\"` : '(unknown type)'\r\n          }, the slice reducer for key \"${key}\" returned undefined. ` +\r\n            `To ignore an action, you must explicitly return the previous state. ` +\r\n            `If you want this reducer to hold no value, you can return null instead of undefined.`\r\n        )\r\n      }\r\n      nextState[key] = nextStateForKey\r\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey\r\n    }\r\n    hasChanged =\r\n      hasChanged || finalReducerKeys.length !== Object.keys(state).length\r\n    return hasChanged ? nextState : state\r\n  }\r\n}\r\n","import { Dispatch } from './types/store'\r\nimport {\r\n  AnyAction,\r\n  ActionCreator,\r\n  ActionCreatorsMapObject\r\n} from './types/actions'\r\nimport { kindOf } from './utils/kindOf'\r\n\r\nfunction bindActionCreator<A extends AnyAction = AnyAction>(\r\n  actionCreator: ActionCreator<A>,\r\n  dispatch: Dispatch\r\n) {\r\n  return function (this: any, ...args: any[]) {\r\n    return dispatch(actionCreator.apply(this, args))\r\n  }\r\n}\r\n\r\n/**\r\n * Turns an object whose values are action creators, into an object with the\r\n * same keys, but with every function wrapped into a `dispatch` call so they\r\n * may be invoked directly. This is just a convenience method, as you can call\r\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\r\n *\r\n * For convenience, you can also pass an action creator as the first argument,\r\n * and get a dispatch wrapped function in return.\r\n *\r\n * @param actionCreators An object whose values are action\r\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\r\n * syntax. You may also pass a single function.\r\n *\r\n * @param dispatch The `dispatch` function available on your Redux\r\n * store.\r\n *\r\n * @returns The object mimicking the original object, but with\r\n * every action creator wrapped into the `dispatch` call. If you passed a\r\n * function as `actionCreators`, the return value will also be a single\r\n * function.\r\n */\r\nexport default function bindActionCreators<A, C extends ActionCreator<A>>(\r\n  actionCreator: C,\r\n  dispatch: Dispatch\r\n): C\r\n\r\nexport default function bindActionCreators<\r\n  A extends ActionCreator<any>,\r\n  B extends ActionCreator<any>\r\n>(actionCreator: A, dispatch: Dispatch): B\r\n\r\nexport default function bindActionCreators<\r\n  A,\r\n  M extends ActionCreatorsMapObject<A>\r\n>(actionCreators: M, dispatch: Dispatch): M\r\nexport default function bindActionCreators<\r\n  M extends ActionCreatorsMapObject,\r\n  N extends ActionCreatorsMapObject\r\n>(actionCreators: M, dispatch: Dispatch): N\r\n\r\nexport default function bindActionCreators(\r\n  actionCreators: ActionCreator<any> | ActionCreatorsMapObject,\r\n  dispatch: Dispatch\r\n) {\r\n  if (typeof actionCreators === 'function') {\r\n    return bindActionCreator(actionCreators, dispatch)\r\n  }\r\n\r\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\r\n    throw new Error(\r\n      `bindActionCreators expected an object or a function, but instead received: '${kindOf(\r\n        actionCreators\r\n      )}'. ` +\r\n        `Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?`\r\n    )\r\n  }\r\n\r\n  const boundActionCreators: ActionCreatorsMapObject = {}\r\n  for (const key in actionCreators) {\r\n    const actionCreator = actionCreators[key]\r\n    if (typeof actionCreator === 'function') {\r\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch)\r\n    }\r\n  }\r\n  return boundActionCreators\r\n}\r\n","type Func<T extends any[], R> = (...a: T) => R\r\n\r\n/**\r\n * Composes single-argument functions from right to left. The rightmost\r\n * function can take multiple arguments as it provides the signature for the\r\n * resulting composite function.\r\n *\r\n * @param funcs The functions to compose.\r\n * @returns A function obtained by composing the argument functions from right\r\n *   to left. For example, `compose(f, g, h)` is identical to doing\r\n *   `(...args) => f(g(h(...args)))`.\r\n */\r\nexport default function compose(): <R>(a: R) => R\r\n\r\nexport default function compose<F extends Function>(f: F): F\r\n\r\n/* two functions */\r\nexport default function compose<A, T extends any[], R>(\r\n  f1: (a: A) => R,\r\n  f2: Func<T, A>\r\n): Func<T, R>\r\n\r\n/* three functions */\r\nexport default function compose<A, B, T extends any[], R>(\r\n  f1: (b: B) => R,\r\n  f2: (a: A) => B,\r\n  f3: Func<T, A>\r\n): Func<T, R>\r\n\r\n/* four functions */\r\nexport default function compose<A, B, C, T extends any[], R>(\r\n  f1: (c: C) => R,\r\n  f2: (b: B) => C,\r\n  f3: (a: A) => B,\r\n  f4: Func<T, A>\r\n): Func<T, R>\r\n\r\n/* rest */\r\nexport default function compose<R>(\r\n  f1: (a: any) => R,\r\n  ...funcs: Function[]\r\n): (...args: any[]) => R\r\n\r\nexport default function compose<R>(...funcs: Function[]): (...args: any[]) => R\r\n\r\nexport default function compose(...funcs: Function[]) {\r\n  if (funcs.length === 0) {\r\n    // infer the argument type so it is usable in inference down the line\r\n    return <T>(arg: T) => arg\r\n  }\r\n\r\n  if (funcs.length === 1) {\r\n    return funcs[0]\r\n  }\r\n\r\n  return funcs.reduce(\r\n    (a, b) =>\r\n      (...args: any) =>\r\n        a(b(...args))\r\n  )\r\n}\r\n","import compose from './compose'\r\nimport { Middleware, MiddlewareAPI } from './types/middleware'\r\nimport { AnyAction } from './types/actions'\r\nimport {\r\n  StoreEnhancer,\r\n  Dispatch,\r\n  PreloadedState,\r\n  StoreEnhancerStoreCreator\r\n} from './types/store'\r\nimport { Reducer } from './types/reducers'\r\n\r\n/**\r\n * Creates a store enhancer that applies middleware to the dispatch method\r\n * of the Redux store. This is handy for a variety of tasks, such as expressing\r\n * asynchronous actions in a concise manner, or logging every action payload.\r\n *\r\n * See `redux-thunk` package as an example of the Redux middleware.\r\n *\r\n * Because middleware is potentially asynchronous, this should be the first\r\n * store enhancer in the composition chain.\r\n *\r\n * Note that each middleware will be given the `dispatch` and `getState` functions\r\n * as named arguments.\r\n *\r\n * @param middlewares The middleware chain to be applied.\r\n * @returns A store enhancer applying the middleware.\r\n *\r\n * @template Ext Dispatch signature added by a middleware.\r\n * @template S The type of the state supported by a middleware.\r\n */\r\nexport default function applyMiddleware(): StoreEnhancer\r\nexport default function applyMiddleware<Ext1, S>(\r\n  middleware1: Middleware<Ext1, S, any>\r\n): StoreEnhancer<{ dispatch: Ext1 }>\r\nexport default function applyMiddleware<Ext1, Ext2, S>(\r\n  middleware1: Middleware<Ext1, S, any>,\r\n  middleware2: Middleware<Ext2, S, any>\r\n): StoreEnhancer<{ dispatch: Ext1 & Ext2 }>\r\nexport default function applyMiddleware<Ext1, Ext2, Ext3, S>(\r\n  middleware1: Middleware<Ext1, S, any>,\r\n  middleware2: Middleware<Ext2, S, any>,\r\n  middleware3: Middleware<Ext3, S, any>\r\n): StoreEnhancer<{ dispatch: Ext1 & Ext2 & Ext3 }>\r\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, S>(\r\n  middleware1: Middleware<Ext1, S, any>,\r\n  middleware2: Middleware<Ext2, S, any>,\r\n  middleware3: Middleware<Ext3, S, any>,\r\n  middleware4: Middleware<Ext4, S, any>\r\n): StoreEnhancer<{ dispatch: Ext1 & Ext2 & Ext3 & Ext4 }>\r\nexport default function applyMiddleware<Ext1, Ext2, Ext3, Ext4, Ext5, S>(\r\n  middleware1: Middleware<Ext1, S, any>,\r\n  middleware2: Middleware<Ext2, S, any>,\r\n  middleware3: Middleware<Ext3, S, any>,\r\n  middleware4: Middleware<Ext4, S, any>,\r\n  middleware5: Middleware<Ext5, S, any>\r\n): StoreEnhancer<{ dispatch: Ext1 & Ext2 & Ext3 & Ext4 & Ext5 }>\r\nexport default function applyMiddleware<Ext, S = any>(\r\n  ...middlewares: Middleware<any, S, any>[]\r\n): StoreEnhancer<{ dispatch: Ext }>\r\nexport default function applyMiddleware(\r\n  ...middlewares: Middleware[]\r\n): StoreEnhancer<any> {\r\n  return (createStore: StoreEnhancerStoreCreator) =>\r\n    <S, A extends AnyAction>(\r\n      reducer: Reducer<S, A>,\r\n      preloadedState?: PreloadedState<S>\r\n    ) => {\r\n      const store = createStore(reducer, preloadedState)\r\n      let dispatch: Dispatch = () => {\r\n        throw new Error(\r\n          'Dispatching while constructing your middleware is not allowed. ' +\r\n            'Other middleware would not be applied to this dispatch.'\r\n        )\r\n      }\r\n\r\n      const middlewareAPI: MiddlewareAPI = {\r\n        getState: store.getState,\r\n        dispatch: (action, ...args) => dispatch(action, ...args)\r\n      }\r\n      const chain = middlewares.map(middleware => middleware(middlewareAPI))\r\n      dispatch = compose<typeof dispatch>(...chain)(store.dispatch)\r\n\r\n      return {\r\n        ...store,\r\n        dispatch\r\n      }\r\n    }\r\n}\r\n","// functions\r\nimport createStore from './createStore'\r\nimport combineReducers from './combineReducers'\r\nimport bindActionCreators from './bindActionCreators'\r\nimport applyMiddleware from './applyMiddleware'\r\nimport compose from './compose'\r\nimport warning from './utils/warning'\r\nimport __DO_NOT_USE__ActionTypes from './utils/actionTypes'\r\n\r\n// types\r\n// store\r\nexport {\r\n  CombinedState,\r\n  PreloadedState,\r\n  Dispatch,\r\n  Unsubscribe,\r\n  Observable,\r\n  Observer,\r\n  Store,\r\n  StoreCreator,\r\n  StoreEnhancer,\r\n  StoreEnhancerStoreCreator,\r\n  ExtendState\r\n} from './types/store'\r\n// reducers\r\nexport {\r\n  Reducer,\r\n  ReducerFromReducersMapObject,\r\n  ReducersMapObject,\r\n  StateFromReducersMapObject,\r\n  ActionFromReducer,\r\n  ActionFromReducersMapObject\r\n} from './types/reducers'\r\n// action creators\r\nexport { ActionCreator, ActionCreatorsMapObject } from './types/actions'\r\n// middleware\r\nexport { MiddlewareAPI, Middleware } from './types/middleware'\r\n// actions\r\nexport { Action, AnyAction } from './types/actions'\r\n\r\n/*\r\n * This is a dummy function to check if the function name has been altered by minification.\r\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\r\n */\r\nfunction isCrushed() {}\r\n\r\nif (\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof isCrushed.name === 'string' &&\r\n  isCrushed.name !== 'isCrushed'\r\n) {\r\n  warning(\r\n    'You are currently using minified code outside of NODE_ENV === \"production\". ' +\r\n      'This means that you are running a slower development build of Redux. ' +\r\n      'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +\r\n      'or setting mode to production in webpack (https://webpack.js.org/configuration/mode/) ' +\r\n      'to ensure you have the correct code for your production build.'\r\n  )\r\n}\r\n\r\nexport {\r\n  createStore,\r\n  combineReducers,\r\n  bindActionCreators,\r\n  applyMiddleware,\r\n  compose,\r\n  __DO_NOT_USE__ActionTypes\r\n}\r\n"],"names":["formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","Object","getPrototypeOf","miniKindOf","val","type","Array","isArray","isDate","isError","constructorName","ctorName","prototype","call","slice","toLowerCase","replace","constructor","name","Error","message","stackTraceLimit","Date","toDateString","getDate","setDate","kindOf","typeOfVal","process","env","NODE_ENV","createStore","reducer","preloadedState","enhancer","arguments","_formatProdErrorMessage","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","_formatProdErrorMessage4","subscribe","listener","_formatProdErrorMessage6","isSubscribed","push","unsubscribe","_formatProdErrorMessage7","index","indexOf","splice","dispatch","action","_formatProdErrorMessage9","_formatProdErrorMessage10","listeners","i","length","replaceReducer","nextReducer","store","outerSubscribe","observer","observeState","observerAsObserver","next","warning","console","error","e","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","unexpectedKeys","filter","key","hasOwnProperty","forEach","assertReducerShape","initialState","_formatProdErrorMessage2","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","previousStateForKey","nextStateForKey","actionType","_formatProdErrorMessage3","String","bindActionCreator","actionCreator","args","apply","bindActionCreators","actionCreators","boundActionCreators","compose","funcs","arg","reduce","a","b","applyMiddleware","middlewares","middlewareAPI","chain","map","middleware","isCrushed"],"mappings":"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"}